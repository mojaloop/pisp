openapi: 3.0.2
info:
  title: Mojaloop PISP/Switch API
  version: '1.0'
  description: A Mojaloop API for thirdparty interactions between `PISPs` (Payment Initiation Service Providers) and a Mojaloop Switch.
  license:
    name: TBD
    url: TBD
servers:
  - url: /
paths:
  '/parties/{Type}/{ID}':
    get:
      summary: Requests information relating to a transfer party identified by the specified identifier type and value.
      description: |
        The HTTP request `GET /parties/{Type}/{ID}` is used to look up
        information regarding the requested transfer party,
        identified by `{Type}` and `{ID}`.

        PISP -> Switch(Account Lookup Service).
      tags:
        - Parties
      parameters:
        - name: ID
          in: path
          required: true
          schema:
            type: string
          description: The identifier value.
        - name: Type
          in: path
          required: true
          schema:
            type: string
          description: 'The type of the party identifier. For example, `MSISDN`, `PERSONAL_ID`.'
      responses:
        '202':
          description: Accepted
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                title: ErrorInformationResponse
                type: object
                description: Data model for the complex type object that contains an optional element ErrorInformation used along with 4xx and 5xx responses.
                properties:
                  errorInformation:
                    title: ErrorInformation
                    type: object
                    description: Data model for the complex type ErrorInformation.
                    properties:
                      errorCode:
                        title: ErrorCode
                        type: string
                        pattern: '^[1-9]\d{3}$'
                        description: |
                          The API data type ErrorCode is a JSON String of four characters,
                          consisting of digits only. Negative numbers are not allowed.
                          A leading zero is not allowed. Each error code in the API is a
                          four-digit number, for example, 1234, where the first number
                          (1 in the example) represents the high-level error category,
                          the second number (2 in the example) represents the low-level error category,
                          and the last two numbers (34 in the example) represent the specific error.
                        example: 5100
                      errorDescription:
                        title: ErrorDescription
                        type: string
                        minLength: 1
                        maxLength: 128
                        description: Error description string.
                        example: This is an error description.
                      extensionList:
                        title: ExtensionList
                        type: object
                        description: |
                          Data model for the complex type ExtensionList.
                          An optional list of extensions, specific to deployment.
                        properties:
                          extension:
                            type: array
                            items:
                              title: Extension
                              type: object
                              description: Data model for the complex type Extension.
                              properties:
                                key:
                                  title: ExtensionKey
                                  type: string
                                  minLength: 1
                                  maxLength: 32
                                  description: Extension key.
                                value:
                                  title: ExtensionValue
                                  type: string
                                  minLength: 1
                                  maxLength: 128
                                  description: Extension value.
                              required:
                                - key
                                - value
                            minItems: 1
                            maxItems: 16
                            description: Number of Extension elements.
                        required:
                          - extension
                    required:
                      - errorCode
                      - errorDescription
          headers:
            Content-Length:
              required: false
              schema:
                type: integer
              description: |
                The `Content-Length` header field indicates the anticipated
                size of the payload body. Only sent if there is a body.
                **Note:** The API supports a maximum size of 5242880 bytes
                (5 Megabytes).
            Content-Type:
              schema:
                type: string
              required: true
              description: The `Content-Type` header indicates the specific version of the API used to send the payload body.
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/paths/~1parties~1%7BType%7D~1%7BID%7D/get/responses/400/content/application~1json/schema'
          headers:
            Content-Length:
              $ref: '#/paths/~1parties~1%7BType%7D~1%7BID%7D/get/responses/400/headers/Content-Length'
            Content-Type:
              $ref: '#/paths/~1parties~1%7BType%7D~1%7BID%7D/get/responses/400/headers/Content-Type'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/paths/~1parties~1%7BType%7D~1%7BID%7D/get/responses/400/content/application~1json/schema'
          headers:
            Content-Length:
              $ref: '#/paths/~1parties~1%7BType%7D~1%7BID%7D/get/responses/400/headers/Content-Length'
            Content-Type:
              $ref: '#/paths/~1parties~1%7BType%7D~1%7BID%7D/get/responses/400/headers/Content-Type'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/paths/~1parties~1%7BType%7D~1%7BID%7D/get/responses/400/content/application~1json/schema'
          headers:
            Content-Length:
              $ref: '#/paths/~1parties~1%7BType%7D~1%7BID%7D/get/responses/400/headers/Content-Length'
            Content-Type:
              $ref: '#/paths/~1parties~1%7BType%7D~1%7BID%7D/get/responses/400/headers/Content-Type'
        '405':
          description: Method Not Allowed
          content:
            application/json:
              schema:
                $ref: '#/paths/~1parties~1%7BType%7D~1%7BID%7D/get/responses/400/content/application~1json/schema'
          headers:
            Content-Length:
              $ref: '#/paths/~1parties~1%7BType%7D~1%7BID%7D/get/responses/400/headers/Content-Length'
            Content-Type:
              $ref: '#/paths/~1parties~1%7BType%7D~1%7BID%7D/get/responses/400/headers/Content-Type'
        '406':
          description: Not Acceptable
          content:
            application/json:
              schema:
                $ref: '#/paths/~1parties~1%7BType%7D~1%7BID%7D/get/responses/400/content/application~1json/schema'
          headers:
            Content-Length:
              $ref: '#/paths/~1parties~1%7BType%7D~1%7BID%7D/get/responses/400/headers/Content-Length'
            Content-Type:
              $ref: '#/paths/~1parties~1%7BType%7D~1%7BID%7D/get/responses/400/headers/Content-Type'
        '501':
          description: Not Implemented
          content:
            application/json:
              schema:
                $ref: '#/paths/~1parties~1%7BType%7D~1%7BID%7D/get/responses/400/content/application~1json/schema'
          headers:
            Content-Length:
              $ref: '#/paths/~1parties~1%7BType%7D~1%7BID%7D/get/responses/400/headers/Content-Length'
            Content-Type:
              $ref: '#/paths/~1parties~1%7BType%7D~1%7BID%7D/get/responses/400/headers/Content-Type'
        '503':
          description: Service Unavailable
          content:
            application/json:
              schema:
                $ref: '#/paths/~1parties~1%7BType%7D~1%7BID%7D/get/responses/400/content/application~1json/schema'
          headers:
            Content-Length:
              $ref: '#/paths/~1parties~1%7BType%7D~1%7BID%7D/get/responses/400/headers/Content-Length'
            Content-Type:
              $ref: '#/paths/~1parties~1%7BType%7D~1%7BID%7D/get/responses/400/headers/Content-Type'
    put:
      description: |
        The callback `PUT /parties/{Type}/{ID}` is used to inform the
        PISP of a successful result of the Party information lookup.

        Switch(Account Lookup Service) -> PISP.
      summary: Return party information
      tags:
        - parties
      parameters:
        - name: Content-Length
          in: header
          required: false
          schema:
            type: integer
          description: |
            The `Content-Length` header field indicates the anticipated size of the
            payload body. Only sent if there is a body.
            **Note:** The API supports a maximum size of 5242880 bytes (5 Megabytes).
      requestBody:
        description: Party information returned.
        required: true
        content:
          application/json:
            schema:
              title: PartiesTypeIDPutResponse
              type: object
              description: |
                The object sent in the PUT /parties/{Type}/{ID} callback.

                This is a variant based on FSPIOP `PartiesTypeIDPutResponse` specification.
                Main difference being that it returns a `Party` with the newly added
                `accounts` property.
              properties:
                party:
                  title: Party
                  type: object
                  description: |
                    Data model for the complex type Party.

                    This is a variant based on FSPIOP `Party` specification.
                    Main difference being the newly added `accounts` property.
                  properties:
                    partyIdInfo:
                      title: PartyIdInfo
                      type: object
                      description: Data model for the complex type PartyIdInfo.
                      properties:
                        partyIdType:
                          title: PartyIdType
                          type: string
                          enum:
                            - MSISDN
                            - EMAIL
                            - PERSONAL_ID
                            - BUSINESS
                            - DEVICE
                            - ACCOUNT_ID
                            - IBAN
                            - ALIAS
                          description: |
                            Below are the allowed values for the enumeration.
                            - MSISDN - An MSISDN (Mobile Station International Subscriber Directory
                            Number, that is, the phone number) is used as reference to a participant.
                            The MSISDN identifier should be in international format according to the
                            [ITU-T E.164 standard](https://www.itu.int/rec/T-REC-E.164/en).
                            Optionally, the MSISDN may be prefixed by a single plus sign, indicating the
                            international prefix.
                            - EMAIL - An email is used as reference to a
                            participant. The format of the email should be according to the informational
                            [RFC 3696](https://tools.ietf.org/html/rfc3696).
                            - PERSONAL_ID - A personal identifier is used as reference to a participant.
                            Examples of personal identification are passport number, birth certificate
                            number, and national registration number. The identifier number is added in
                            the PartyIdentifier element. The personal identifier type is added in the
                            PartySubIdOrType element.
                            - BUSINESS - A specific Business (for example, an organization or a company)
                            is used as reference to a participant. The BUSINESS identifier can be in any
                            format. To make a transaction connected to a specific username or bill number
                            in a Business, the PartySubIdOrType element should be used.
                            - DEVICE - A specific device (for example, a POS or ATM) ID connected to a
                            specific business or organization is used as reference to a Party.
                            For referencing a specific device under a specific business or organization,
                            use the PartySubIdOrType element.
                            - ACCOUNT_ID - A bank account number or FSP account ID should be used as
                            reference to a participant. The ACCOUNT_ID identifier can be in any format,
                            as formats can greatly differ depending on country and FSP.
                            - IBAN - A bank account number or FSP account ID is used as reference to a
                            participant. The IBAN identifier can consist of up to 34 alphanumeric
                            characters and should be entered without whitespace.
                            - ALIAS An alias is used as reference to a participant. The alias should be
                            created in the FSP as an alternative reference to an account owner.
                            Another example of an alias is a username in the FSP system.
                            The ALIAS identifier can be in any format. It is also possible to use the
                            PartySubIdOrType element for identifying an account under an Alias defined
                            by the PartyIdentifier.
                          example: PERSONAL_ID
                        partyIdentifier:
                          title: PartyIdentifier
                          type: string
                          minLength: 1
                          maxLength: 128
                          description: Identifier of the Party.
                          example: 16135551212
                        partySubIdOrType:
                          title: PartySubIdOrType
                          type: string
                          minLength: 1
                          maxLength: 128
                          description: |
                            Either a sub-identifier of a PartyIdentifier, or a sub-type of the
                            PartyIdType, normally a PersonalIdentifierType.
                          example: DRIVING_LICENSE
                        fspId:
                          title: FspId
                          type: string
                          minLength: 1
                          maxLength: 32
                          description: FSP identifier.
                          example: 1234
                      required:
                        - partyIdType
                        - partyIdentifier
                    merchantClassificationCode:
                      title: MerchantClassificationCode
                      type: string
                      pattern: '^[\d]{1,4}$'
                      description: |
                        A limited set of pre-defined numbers. This list would be a limited set of
                        numbers identifying a set of popular merchant types like School Fees,
                        Pubs and Restaurants, Groceries, etc.
                      example: 4321
                    name:
                      title: PartyName
                      type: string
                      minLength: 1
                      maxLength: 128
                      description: Name of the Party. Could be a real name or a nickname.
                      example: Henrik Karlsson
                    personalInfo:
                      title: PartyPersonalInfo
                      type: object
                      description: Data model for the complex type PartyPersonalInfo.
                      properties:
                        complexName:
                          title: PartyComplexName
                          type: object
                          description: Data model for the complex type PartyComplexName.
                          properties:
                            firstName:
                              title: FirstName
                              type: string
                              minLength: 1
                              maxLength: 128
                              pattern: '^(?!\s*$)[\w .,''-]{1,128}$'
                              description: First name of the Party (Name Type).
                              example: Henrik
                            middleName:
                              title: MiddleName
                              type: string
                              minLength: 1
                              maxLength: 128
                              pattern: '^(?!\s*$)[\w .,''-]{1,128}$'
                              description: Middle name of the Party (Name Type).
                              example: Johannes
                            lastName:
                              title: LastName
                              type: string
                              minLength: 1
                              maxLength: 128
                              pattern: '^(?!\s*$)[\w .,''-]{1,128}$'
                              description: Last name of the Party (Name Type).
                              example: Karlsson
                        dateOfBirth:
                          title: DateofBirth (type Date)
                          type: string
                          pattern: '^(?:[1-9]\d{3}-(?:(?:0[1-9]|1[0-2])-(?:0[1-9]|1\d|2[0-8])|(?:0[13-9]|1[0-2])-(?:29|30)|(?:0[13578]|1[02])-31)|(?:[1-9]\d(?:0[48]|[2468][048]|[13579][26])|(?:[2468][048]|[13579][26])00)-02-29)$'
                          description: Date of Birth of the Party.
                          example: '1966-06-16'
                    accounts:
                      description: 'List of accounts associated with the party containing and DFSP routable address, currency identifier and description.'
                      title: AccountList
                      type: object
                      properties:
                        account:
                          type: array
                          items:
                            title: Account
                            type: object
                            description: Data model for the complex type Account.
                            properties:
                              address:
                                title: AccountAddress
                                type: string
                                description: |
                                  A long-lived unique account identifier provided by the DFSP. This MUST NOT
                                  be Bank Account Number or anything that may expose a User's private bank
                                  account information.
                                pattern: '^([0-9A-Za-z_~\-\.]+[0-9A-Za-z_~\-])$'
                                minLength: 1
                                maxLength: 1023
                              currency:
                                title: Currency
                                description: |
                                  The currency codes defined in
                                  [ISO 4217](https://www.iso.org/iso-4217-currency-codes.html)
                                  as three-letter alphabetic codes are used as the standard naming representation for currencies.
                                type: string
                                minLength: 3
                                maxLength: 3
                                enum:
                                  - AED
                                  - AFN
                                  - ALL
                                  - AMD
                                  - ANG
                                  - AOA
                                  - ARS
                                  - AUD
                                  - AWG
                                  - AZN
                                  - BAM
                                  - BBD
                                  - BDT
                                  - BGN
                                  - BHD
                                  - BIF
                                  - BMD
                                  - BND
                                  - BOB
                                  - BRL
                                  - BSD
                                  - BTN
                                  - BWP
                                  - BYN
                                  - BZD
                                  - CAD
                                  - CDF
                                  - CHF
                                  - CLP
                                  - CNY
                                  - COP
                                  - CRC
                                  - CUC
                                  - CUP
                                  - CVE
                                  - CZK
                                  - DJF
                                  - DKK
                                  - DOP
                                  - DZD
                                  - EGP
                                  - ERN
                                  - ETB
                                  - EUR
                                  - FJD
                                  - FKP
                                  - GBP
                                  - GEL
                                  - GGP
                                  - GHS
                                  - GIP
                                  - GMD
                                  - GNF
                                  - GTQ
                                  - GYD
                                  - HKD
                                  - HNL
                                  - HRK
                                  - HTG
                                  - HUF
                                  - IDR
                                  - ILS
                                  - IMP
                                  - INR
                                  - IQD
                                  - IRR
                                  - ISK
                                  - JEP
                                  - JMD
                                  - JOD
                                  - JPY
                                  - KES
                                  - KGS
                                  - KHR
                                  - KMF
                                  - KPW
                                  - KRW
                                  - KWD
                                  - KYD
                                  - KZT
                                  - LAK
                                  - LBP
                                  - LKR
                                  - LRD
                                  - LSL
                                  - LYD
                                  - MAD
                                  - MDL
                                  - MGA
                                  - MKD
                                  - MMK
                                  - MNT
                                  - MOP
                                  - MRO
                                  - MUR
                                  - MVR
                                  - MWK
                                  - MXN
                                  - MYR
                                  - MZN
                                  - NAD
                                  - NGN
                                  - NIO
                                  - NOK
                                  - NPR
                                  - NZD
                                  - OMR
                                  - PAB
                                  - PEN
                                  - PGK
                                  - PHP
                                  - PKR
                                  - PLN
                                  - PYG
                                  - QAR
                                  - RON
                                  - RSD
                                  - RUB
                                  - RWF
                                  - SAR
                                  - SBD
                                  - SCR
                                  - SDG
                                  - SEK
                                  - SGD
                                  - SHP
                                  - SLL
                                  - SOS
                                  - SPL
                                  - SRD
                                  - STD
                                  - SVC
                                  - SYP
                                  - SZL
                                  - THB
                                  - TJS
                                  - TMT
                                  - TND
                                  - TOP
                                  - TRY
                                  - TTD
                                  - TVD
                                  - TWD
                                  - TZS
                                  - UAH
                                  - UGX
                                  - USD
                                  - UYU
                                  - UZS
                                  - VEF
                                  - VND
                                  - VUV
                                  - WST
                                  - XAF
                                  - XCD
                                  - XDR
                                  - XOF
                                  - XPF
                                  - YER
                                  - ZAR
                                  - ZMW
                                  - ZWD
                                example: USD
                              description:
                                title: Name
                                type: string
                                pattern: '^(?!\s*$)[\w .,''-]{1,128}$'
                                description: |
                                  The API data type Name is a JSON String, restricted by a regular expression
                                  to avoid characters which are generally not used in a name.
                                  Regular Expression - The regular expression for restricting the
                                  Name type is \"^(?!\\s*$)[\\w .,'-]{1,128}$\". The restriction does not
                                  allow a string consisting of whitespace only, all Unicode characters are
                                  allowed, as well as the period (.) (apostrophe (‘), dash (-), comma (,)
                                  and space characters ( ).
                                  **Note:** In some programming languages,
                                  Unicode support must be specifically enabled. For example, if Java is used,
                                  the flag UNICODE_CHARACTER_CLASS must be enabled to allow Unicode characters.
                            required:
                              - currency
                          minItems: 1
                          maxItems: 32
                          description: Accounts associated with the Party.
                      required:
                        - account
                  required:
                    - partyIdInfo
              required:
                - party
      responses:
        '200':
          description: OK
        '400':
          $ref: '#/paths/~1parties~1%7BType%7D~1%7BID%7D/get/responses/400'
        '401':
          $ref: '#/paths/~1parties~1%7BType%7D~1%7BID%7D/get/responses/401'
        '403':
          $ref: '#/paths/~1parties~1%7BType%7D~1%7BID%7D/get/responses/403'
        '404':
          $ref: '#/paths/~1parties~1%7BType%7D~1%7BID%7D/get/responses/404'
        '405':
          $ref: '#/paths/~1parties~1%7BType%7D~1%7BID%7D/get/responses/405'
        '406':
          $ref: '#/paths/~1parties~1%7BType%7D~1%7BID%7D/get/responses/406'
        '501':
          $ref: '#/paths/~1parties~1%7BType%7D~1%7BID%7D/get/responses/501'
        '503':
          $ref: '#/paths/~1parties~1%7BType%7D~1%7BID%7D/get/responses/503'
