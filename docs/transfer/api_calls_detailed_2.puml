@startuml

title PISPTransferDetailedAPI

box "PISP"
participant "PISP Server" as D1
end box
box "Mojaloop"
    participant Switch as S
    participant "ALS" as A
    participant "Auth-Service" as AUTHS
end box
box "DFSP A"
    participant "DFSP A\n(Payer)" as D2
end box
box "DFSP B"
    participant "DFSP B\n(Payee)" as D3
end box
actor "Bhavesh\n(+44 1234 5678)" as CB


== Agreement Phase ==
rnote right of D1 #Light
**""POST /thirdpartyRequests/transactions""**
""FSPIOP-Source: pispa""
""FSPIOP-Destination: dfspa""
{
  "transactionRequestId": "123",
  "payee": {
    "partyIdInfo": {
      "partyIdType": "MSISDN",
      "partyIdentifier": "+4412345678",
      "fspId": "dfspb"
    }
  },
  "payer": {
    "partyIdType": "THIRD_PARTY_LINK",
    "partyIdentifier": "qwerty-56789",
    "fspId": "dfspa"
  },
  "amountType": "SEND",
  "amount": {
    "amount": "100",
    "currency": "USD"
  },
  "transactionType": {
    "scenario": "TRANSFER",
    "initiator": "PAYER",
    "initiatorType": "CONSUMER"
  },
  "expiration": "2020-06-15T22:17:28.985-01:00"
}
end note
D1 -> S: ""POST /thirdpartyRequests/transactions""
S --> D1: ""202 Accepted""
S -> D2: ""POST /thirdpartyRequests/transactions""
D2 --> S: ""202 Accepted""
D2 -> D2: Lookup this ""payer"", verify that they exist, and consent \nis granted with a valid credential
D2 -> D2: Generate a unique transactionId for this transaction request: ""987""


rnote left of D2 #Light
**""PUT /thirdpartyRequests/transactions/123""**
""FSPIOP-Source: dfspa""
""FSPIOP-Destination: pispa""
{
  "transactionId": "987",
  "transactionRequestState": "RECEIVED"
}
end note
D2 -> S: ""PUT /thirdpartyRequests/transactions/123""
S --> D2: ""200 OK""
S -> D1: ""PUT /thirdpartyRequests/transactions/123""
D1 --> S: ""200 OK""


rnote left of D2 #Light
**""POST /quotes""**
""FSPIOP-Source: dfspa""
""FSPIOP-Destination: dfspb""
{
  "quoteId": "456", //Set by the payer dfsp
  "transactionId": "987", //Set by the payer dfsp
  *"transactionRequestId": "123", //Relates to the original thirdpartyRequest!*
  "payee": {
    "partyIdInfo": {
      "partyIdType": "MSISDN",
      "partyIdentifier": "+4412345678",
      "fspId": "dfspb"
    }
  },
  "payer": {
    "personalInfo": {
      "complexName": {
        "firstName": "Ayesha",
        "lastName": "Takia"
      }
    },
    "partyIdInfo": {
      "partyIdType": "THIRD_PARTY_LINK",
<<<<<<< HEAD
      "partyIdentifier": "qwerty-56789",
=======
      "partyIdentifier": "???",
>>>>>>> d0b93bf726403683dc98b4f6b162c555d8aa85ee
      "fspId": "dfspa"
    },
    },
  },
  "amountType": "SEND",
  "amount": {
    "amount": "100",
    "currency": "USD"
  },
  "transactionType": {
    "scenario": "TRANSFER",
    "initiator": "PAYER",
    "initiatorType": "CONSUMER"
  },
  "note": "quote note"
}
end note
D2 -> S: ""POST /quotes""
S --> D2: ""202 Accepted""
S -> D3: ""POST /quotes""
D3 --> S: ""202 Accepted""

rnote left of D2 #Light
**""PUT /quotes/456""**
""FSPIOP-Source: dfspb""
""FSPIOP-Destination: dfspa""
{
  "transferAmount": {
    "amount": "100",
    "currency": "USD"
  },
  "payeeReceiveAmount": {
    "amount": "99",
    "currency": "USD"
  },
  "payeeFspFee": {
    "amount": "1",
    "currency": "USD"
  },
  "expiration": "2020-06-15T12:00:00.000",
  "ilpPacket": "...",
  "condition": "...",
}
end note
D3 -> S: ""PUT /quotes/456""
S --> D3: ""200 OK""
S -> D2: ""PUT /quotes/456""
D2 --> S: ""200 OK""

note left of D2
  DFSPA has the quote, they can now ask
  the PISP for authorization
end note

rnote left of D2 #Light
**""POST /authorizations""**
""FSPIOP-Source: dfspa""
""FSPIOP-Destination: pispa""
{
  "authorizationId": "999",
  "authenticationType": TODO,

  //transactionRequestId is our 'primary key'
  //to refer to this authorization
  **"transactionRequestId": "123",**
  "authenticationType": "U2F",
  "retriesLeft": "1",
  "transaction": "TODO",...
  "condition": "...",
  // SHA_256(canonicalJson(transaction)), but provided here for convenience
  "challenge": "...",
}
end note
D2 -> S: ""POST /authorizations""
S --> D2: ""202 Accepted""
S -> D1: ""POST /authorizations""
D1 --> S: ""202 Accepted""

note right of D1
  PISP checks the quote with the user,
  and uses FIDO to sign the the QuoteResponse object
end note

rnote right of D1 #Light
**""PUT /authorizations/999""**
""FSPIOP-Source: pispa""
""FSPIOP-Destination: dfspa""
{
  "authenticationInfo": {
    "authentication": "U2F",
    "authenticationValue": {
      "pinValue": "<base64 encoded binary - the signed challenge>",
      "counter": "1"
    }
  }
  "responseType": "ENTERED"
}
end note
D1 -> S: ""PUT /authorizations/999""
S --> D1: ""200 OK""
S -> D2: ""PUT /authorizations/999""
D2 --> S: ""200 OK""

' TODO: update
D2 -> D2: Lookup the ""thirdpartyRequests/transaction""\nrequest, get the ""consentId"" and ""sourceAccountId""
D2 -> D2: Confirm pispId from ""PUT /authorizations/123""\n matches the ""thirdpartyRequests/transaction""

note over D2
  DFSP has the signed condition
  For 3rd party FIDO, it now needs to make sure everything checks out
end note

rnote left of D2 #Light
**""POST /authentications""**
""FSPIOP-Source: dfspa""
""FSPIOP-Destination: central-auth""
{
  "authenticationRequestId": "888",
  "consentId": todo,
  "accountAddress": todo,
  "challenge: "...",
  //signed challenge by PISP
  "response": "..."
}
end note
D2 -> S: ""POST /authentications""
S --> D2: ""202 Accepted""
S -> AUTHS: ""POST /authentications""
AUTHS --> S: ""202 Accepted""

AUTHS -> AUTHS: Lookup this consent based on consentId
AUTHS -> AUTHS: Ensure the accountAddress matches what is in Consent
AUTHS -> AUTHS: Check that the signed bytes match the \npublickey we have stored for the consent

rnote right of AUTHS #Light
**""PUT /authentications/888""**
""FSPIOP-Source: central-auth""
""FSPIOP-Destination: dfspa""
{
  "authenticationResponse": "VERIFIED"
}
end note
AUTHS -> S: ""PUT /authentications/888""
S --> AUTHS: ""200 OK""
S -> D2: ""PUT /authentications/888""
D2 --> S: ""200 OK""

note over D2
  DFSPA now knows that the user signed this transaction
  and can go ahead and initiate the transfer
end note



@enduml
